#if defined(ESP32)
  #include <WiFi.h>
#elif defined(ESP8266)
  #include <ESP8266WiFi.h>
#endif
#include <Firebase_ESP_Client.h>
#include "addons/TokenHelper.h"
#include "addons/RTDBHelper.h"
#define WIFI_SSID "IoTdevices"
#define WIFI_PASSWORD "dFscvc=Itrs"
#define API_KEY "AIzaSyBfEA9-tvOhCddffdjDDEHs7hsvqCsgL18"
#define DATABASE_URL "https://ea2022-502d9-default-rtdb.firebaseio.com/" 
FirebaseData fbdo;
FirebaseAuth auth;
FirebaseConfig config; 
const int InfraredSensorPin[] = {34, 35, 32, 33};
const int LedPin[] = {14, 27, 26, 25}; 
const int maxValue[] = {100, 255, 180, 25}; 
int currValue[] = {25, 25, 25, 25};
int stand[] = {3, 3, 3, 3};
const int maxTimer[] = {1000, 5000, 10000};
int timer[] = {0, 0, 0, 0};
long int t1;
long int t2;
long int t = 100;
const int freq = 5000;
const int resolution = 8;
void setup()
{
  Serial.begin(57600);
  Serial.println("Start!");
  pinMode(InfraredSensorPin[0], INPUT);
  pinMode(InfraredSensorPin[1], INPUT);
  pinMode(InfraredSensorPin[2], INPUT);
  pinMode(InfraredSensorPin[3], INPUT);
  //setup leds verschillende channels (0, 1, 2, 3)
  ledcSetup(0, freq, resolution);
  ledcSetup(1, freq, resolution);
  ledcSetup(2, freq, resolution);
  ledcSetup(3, freq, resolution);  
  //linken van de channels aan de LedPins
  ledcAttachPin(LedPin[0], 0);
  ledcAttachPin(LedPin[1], 1);
  ledcAttachPin(LedPin[2], 2);
  ledcAttachPin(LedPin[3], 3);
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  Serial.print("Connecting to Wi-Fi");
  while (WiFi.status() != WL_CONNECTED){
    Serial.print(".");
    delay(300);}  
  Serial.println();
  Serial.print("Connected with IP: ");
  Serial.println(WiFi.localIP());
  Serial.println();
  config.api_key = API_KEY;
  config.database_url = DATABASE_URL;
  if (Firebase.signUp(&config, &auth, "", "")){
    Serial.println("ok");
//    signupOK = true;
  }
  else{Serial.printf("v%s\n\n", config.signer.signupError.message.c_str());}
  config.token_status_callback = tokenStatusCallback; //see addons/TokenHelper.h
  Firebase.begin(&config, &auth);
  Firebase.reconnectWiFi(true);
}
void loop()
{
  t1 = millis();
  sensor();
  rightStand();
  currentValue();
  writeLed(); 
  t2 = millis();
  t = 1000/(t2-t1);
}
void resetTimer(int i){
  if (i == 0){
    timer[0] == 0;
    timer[1] == 0;
  }
  if (i == 3){
    timer[2] == 0;
    timer[3] == 0;
  }
  if (i != 0 and i != 3){
    timer[i-1] = 0;
    timer[i] = 0;
    timer[i+1] = 0;
  }
}
void sensor(){
   for (int i = 0; i < 4; i++) {
    if (digitalRead(InfraredSensorPin[i]) == 0){
      stand[i] = 1;
      resetTimer(i);
      if (i != 0 and (1 > stand[i-1] or stand[i-1] > 2)){
        stand[i-1] = 0;
      }
      if (i != 4 and stand[i+1] != 1){
        stand[i+1] = 2;
      }
      if (i == 0) {
        stand[1] = 2;
      }
    }
  }
}
void rightStand(){
  for (int i = 0; i < 4; i++) {
    if (stand[i] <= 2){
      timer[i] += 50;
      if (timer[i] >= maxTimer[stand[i]]){
        timer[i] =0;
        if (stand[i] > 0){
          stand[i] -= 1;
        }
        else{
          stand[i] = 3;
        }
      }
    }
  }
}
void writeLed(){
  for (int channel = 0; channel < 4; channel++){
    currValue[i] = maxValue[stand[i]];
    ledcWrite(channel, currValue[channel]);
  }
}
